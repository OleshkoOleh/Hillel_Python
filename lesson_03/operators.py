# # +, *, / -  оператор
#
# # A, B - операнд
#
# # A+B=C - выражение
#
# s1 = 'Hello'
# s2 = 'World!'
#
# s3 = s1 + ' ' + s2
# print(s3)
# print(s3*8)

# print(165/8, type(165/8))
# print(165//8, type(165//8))
#
# print(5>6)
# print(5>3)
#
# print(5 <= 3)
# print(5 <= 6)

# ---------------------------------------------

# Операторы сравнения
# <            Меньше
# >            Больше
# >=           Больше или равно
# <=           Меньше или равно
# ==           Равно
# !=           Не равно   / Проверяет, верно ли, что объекты не равны x = 2; y = 3 x!=y дает True

# На выходе
# True или False

# ---------------------------------------------

# Операторы присваивания
# ' = '

# =           Присвоить
# +=          Сложение с последующим присваиванием
# -=          Вычитание с последующим присваиванием
# *=          Умножение с последующим присваиванием
# /=          Деление с последующим присваиванием
# //=         Деление целочисленного с последующим присваиванием
# %=          Вычисление остатка от деления с последующим присваиванием
# **=         Возведение числа в степень с последующим присваиванием
# >>=         Сдвиг битов числа вправо с последующим присваиванием
# <<=         Сдвиг битов числа влево с последующим присваиванием
# &=          Выполняет битовое "И" с последующим присваиванием
# |=          Выполняет битовое "ИЛИ" с последующим присваиванием
# ^=          Выполняет битовое "Исключающее ИЛИ" с последующим присваиванием

# ---------------------------------------------

# Логические операторы

# not         Логическое "Не"   / Если х равно True, оператор вернет False. Если х равно False, оператор вернет True
# and         Логическое "И"    / х и у дает False, если х равно False, в противном случае возвращает значение y
# or          Логическое "ИЛИ"  / Если х равно True, в результате получим TRUE, в противном случае получим значение y

#  A       B          A and B       A or B       not A
# True    True         True          True        False
# True    False        False         True        False
# False   True         False         True        True
# False   False        False         False       True

# ---------------------------------------------

# Битовые операторы

# &         Побитовое И
# |         Побитовое ИЛИ
# ^         Побитовое ИСКЛЮЧИТЕЛЬНО ИЛИ
# ~         Побитовое НЕ

#  10101101            173
# &                   &
#  10100001            161
#
#  10100001            161

#  A       B          A ^ B
# True    True         False
# True    False        True
# False   True         True
# False   False        False

# ---------------------------------------------

# Операторы сдвига

# <<          Сдвиг влево
# >>          Сдвиг вправо


#    00011001 << 4
# 1. 00110010
# 2. 01100100
# 3. 11001000
# 4. 10010000

# print(25<<4)
# print(25<<50)

#   Пример

#    00011001
#   &
#    00000001
#    00000000                   == 0  !=0

# Пример. Если нужно получить сведение о 4м бите


 # 00000001

# print(25 & (1 << 3))

# Приоритеты
# https://docs.python.org/3/reference/expressions.html?highlight=precedence

